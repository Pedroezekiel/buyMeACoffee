import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { abi } from '../constants/index'
import { BUY_ME_A_COFFEE_CONTRACT } from '../constants/index'
import React, {useEffect, useState} from 'react'
import { ethers } from 'ethers'

export default function Home() {
  const contractAddress = BUY_ME_A_COFFEE_CONTRACT
  const contractABI = abi

  const [currentAccount, setCurrentAccount] = useState("");
  const [name, setName] = useState("")
  const [message, setMessage] = useState("");
  const [memos, setMemos] = useState([])

  const onNameChange = (event) => {
    setName(event.target.value);
  }

  const onMessageChange = (event) =>{
    setMessage(event.target.value);
  }

  const isWalletConnected = async () => {
    try{
      const{ethereum} = window;

      const accounts = await ethereum.request({method: 'eth_accounts'})
      console.log("account: ", error);

      if (accounts.length > 0) {
        const account = accounts[0];
        console.log("wallet is connected! "+ account);
      } else {
        console.log("make sure metamask is connected");
      }
    }catch(error){
      console.log("error: ", error);
    }
  }

  const connectWallet = async () =>{
    try{
      const{ethereum} = window

      if (!ethereum){
        console.log("please install metamask");
      }

      const accounts = await ethereum.request({
        method: 'eth_requestAccounts'
      })
      setCurrentAccount(account[0]);
    }catch(error){
      console.log(error);
    }
  }
  const buyCoffee = async () => {
    try{
      const {ethereum} = window;

      if (ethereum) {
      const provider = new ethers.providers.Web3Provider(ethereum, "any");
      const signer = provider.getSigner();
      const buyMeACoffee = new ethers.Contract(
        contractAddress,
        contractABI,
        signer
      )
      console.log("buying coffee..");
      const coffeeTxn = await buyMeACoffee.buyCoffee(
        name ? name : "anon",
        message ? message : "Enjoy your coffee!",
        {value: ethers.utils.parseEther("0.001")}
      )

      await coffeeTxn.wait();

      console.log("minted", coffeeTxn.hash);

      console.log("coffee purchased");

      setName("")
      setMessage("")
    }
  }catch(error){
    console.log(error);
  }
};

const getMemos = async ()=>{
  try {
    
  } catch (error) {
    
  }
}


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
